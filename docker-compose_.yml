services:
  db:
    container_name: db
    image: postgres:16.4-alpine3.20
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - '5555:5432'
    networks:
      - network
  #   volumes:
  #     - type: bind
  #      source: data
  #      target: /var/lib/postgresql/data
  onboarding_backend:
    container_name: onboarding_backend
    build:
      context: app/
      dockerfile: Dockerfile
    image: onboarding_backend
    networks:
      - network
      - traefik_web
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_web"
      - "traefik.http.routers.onboarding_backend.rule=Host(`testboivalenko.de`) && PathPrefix(`/api`)"
      - "traefik.http.services.onboarding_backend.loadbalancer.server.port=8083"
    depends_on:
      db:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
  onboarding_frontend:
    container_name: onboarding_frontend
    build:
      context: ui/
      dockerfile: Dockerfile
    image: onboarding_frontend
    networks:
      - network
      - traefik_web
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_web"
      - "traefik.http.routers.onboarding_frontend.rule=Host(`testboivalenko.de`)"
      - "traefik.http.services.onboarding_frontend.loadbalancer.server.port=80"
    depends_on:
      onboarding_backend:
        condition: service_started
networks:
  network:
  traefik_web:
    external: true
